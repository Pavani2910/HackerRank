/*problem
The Binary number system only uses two digits, 0 and 1 and number system can be called binary string. You are required to implement the following function:
int OperationsBinaryString(char* str);
The function accepts a string str as its argument. The string str consists of binary digits eparated with an alphabet as follows:
A denotes AND operation
B denotes OR operation
C denotes XOR Operation
You are required to calculate the result of the string str, scanning the string to right taking one opearation at a time, and return the same.
Input Format:
One Binary String
Constraints
No order of priorities of operations is required Length of str is odd If str is NULL or None (in case of Python), return -1
Output Format:
Result of the expression
Sample Input :
1C0C1C1A0B1
Sample Output :
1
Explanation :
The alphabets in str when expanded becomes “1 XOR 0 XOR 1 XOR 1 AND 0 OR 1”, result of the expression becomes 1, hence 1 is returned.
*/
#include <stdio.h>
#include <stdlib.h>
int OperationsBinaryString(const char *s) {
 if (s == NULL) {
 return -1;
 }
 char operation = 'A';
 int result = 0;
 int is_number = 1;
 for (int i = 0; s[i] != '\0'; i++) {
       char ch = s[i];
       if (ch == 'A' || ch == 'B' || ch == 'C') {
            operation = ch;
            is_number = 0;
        } 
       else if (ch == '0' || ch == '1') {
            int number = ch - '0';
            if (is_number)
                result = number;
            else {
              if (operation == 'A') 
                  result = result & number;
      else if (operation == 'B') {
            result = result | number;
      } 
      else if (operation == 'C') {
          result = result ^ number;
         }
 }
 is_number = 1;
 } }
 return result;
}
int main() {
 char input_string[100];
 printf("Enter a binary string: ");
 scanf("%s", input_string);
 int result = OperationsBinaryString(input_string);
 printf("Result: %d\n", result);
 return 0;
}
