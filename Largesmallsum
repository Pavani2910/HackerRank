/*Problem
Implement the following Function
def LargeSmallSum(arr,len)
The function accepts an integers arr of size ’len’ as its arguments you are required to return the sum of second largest element from the even positions and second smallest from the odd position of given ‘arr’
NOTE
Return 0 if array is empty Return 0, if array length is 3 or less than 3
Input Format
First line, n denotes no.of elements in an array Second line, n elements of an array
Constraints
All array elements are unique Treat the 0th position as even
Output Format
value, sum of second largest element from the even positions and second smallest from the odd position of given ‘arr’
Sample Input 0:
6
3 2 1 7 5 4
Sample Output 0:
7
Explanation 0:
Second largest among even position elements(1 3 5) is 3
Second smallest among odd position elements (2 7 4) is 4
Thus output is 3 + 4 = 7
*/
import java.util.*;
class Solution 
{
    public static int largeSmallSum (int[]arr) 
    {
        ArrayList < Integer > even = new ArrayList < Integer > ();
        ArrayList < Integer > odd = new ArrayList < Integer > ();
        even.add (arr[0]);
       for (int i = 1; i < arr.length; i++)
        {
            if (i % 2 == 0)
                even.add (arr[i]);
            else
                odd.add (arr[i]);
        }
        Collections.sort (even);
        Collections.sort (odd);

        return even.get (even.size () - 2) + odd.get (1);
    }
 
    public static void main (String[]args) 
    {
        Scanner sc = new Scanner (System.in);
        int n = sc.nextInt ();
        int arr[] = new int[n]; 
        for (int i = 0; i < n; i++)
            arr[i] = sc.nextInt ();

        System.out.println (largeSmallSum (arr));
    } 
}
