/* Problem
Implement the following Function
def differenceofSum(n, m)
The function accepts two integers n, m as arguments Find the sum of all numbers in range from 1 to m(both inclusive) that are not divisible by n and divisible by n. Return difference between sum of integers not divisible by n with sum of numbers divisible by n.
Input Format:
First Line, n denotes the divisor Second Line, m denotes the upper bound of range
Constraints
n>0 and m>0 Sum lies between integral range
Output Format
value, difference between the sum of integers not divisible by n with sum of numbers divisible by n.
Sample Input 0:
4
20
Sample Output 0:
90
Explanation 0:
Sum of numbers divisible by 4 are 
4 + 8 + 12 + 16 + 20 = 60
Sum of numbers not divisible by 4 are 
1 +2 + 3 + 5 + 6 + 7 + 9 + 10 + 11 + 13 + 14 + 15 + 17 + 18 + 19 = 150
Difference 150 – 60 = 90
*/
import java.util.Scanner;
public class DifferenceOfSum {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        int m = scanner.nextInt();
        int divisibleSum = 0;
        for (int i = 1; i <= m; i++) {
            if (i % n == 0) {
                divisibleSum += i;
            }
        }
        int notDivisibleSum = 0;
        for (int i = 1; i <= m; i++) {
            if (i % n != 0) {
                notDivisibleSum += i;
            }
        }
        int difference = notDivisibleSum - divisibleSum;
        System.out.println(difference);
    }
}
